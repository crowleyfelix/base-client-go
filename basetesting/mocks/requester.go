// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/stone-payments/logistic-sdk-go/request (interfaces: Requestable)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	request "github.com/stone-payments/logistic-sdk-go/request"
)

// MockRequestable is a mock of Requestable interface
type MockRequestable struct {
	ctrl     *gomock.Controller
	recorder *MockRequestableMockRecorder
}

// MockRequestableMockRecorder is the mock recorder for MockRequestable
type MockRequestableMockRecorder struct {
	mock *MockRequestable
}

// NewMockRequestable creates a new mock instance
func NewMockRequestable(ctrl *gomock.Controller) *MockRequestable {
	mock := &MockRequestable{ctrl: ctrl}
	mock.recorder = &MockRequestableMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRequestable) EXPECT() *MockRequestableMockRecorder {
	return m.recorder
}

// Delete mocks base method
func (m *MockRequestable) Delete(arg0 string, arg1 *request.Options) (*request.Response, error) {
	ret := m.ctrl.Call(m, "Delete", arg0, arg1)
	ret0, _ := ret[0].(*request.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Delete indicates an expected call of Delete
func (mr *MockRequestableMockRecorder) Delete(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockRequestable)(nil).Delete), arg0, arg1)
}

// Get mocks base method
func (m *MockRequestable) Get(arg0 string, arg1 *request.Options) (*request.Response, error) {
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(*request.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockRequestableMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockRequestable)(nil).Get), arg0, arg1)
}

// Post mocks base method
func (m *MockRequestable) Post(arg0 string, arg1 *request.Options) (*request.Response, error) {
	ret := m.ctrl.Call(m, "Post", arg0, arg1)
	ret0, _ := ret[0].(*request.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Post indicates an expected call of Post
func (mr *MockRequestableMockRecorder) Post(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Post", reflect.TypeOf((*MockRequestable)(nil).Post), arg0, arg1)
}

// Put mocks base method
func (m *MockRequestable) Put(arg0 string, arg1 *request.Options) (*request.Response, error) {
	ret := m.ctrl.Call(m, "Put", arg0, arg1)
	ret0, _ := ret[0].(*request.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Put indicates an expected call of Put
func (mr *MockRequestableMockRecorder) Put(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Put", reflect.TypeOf((*MockRequestable)(nil).Put), arg0, arg1)
}
